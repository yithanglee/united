<div class="container">
  <div class="row py-4">
    <div class="col-12 offset-lg-1 col-lg-8 text-left">


        <div class="card">
            <div class="card-body">
                <p class="lead">Things to do:</p>
                
                <ul>
                    <li>Connect With Facebook

                        <ul>
                            <%= if @conn.private.plug_session["current_user"] != nil do %>
                                <%= with true <- :fb_user_id in Map.keys(@conn.private.plug_session["current_user"]), 
                               true <-  @conn.private.plug_session["current_user"].fb_user_id != nil do %>
                                <li>FB User ID: <span class="badge bg-primary"><%= @conn.private.plug_session["current_user"].fb_user_id%></span></li>
                                <% else 
                                 _ -> %>
                                    <li> <a class=" btn btn-primary btn-sm" href="/fb_login">Connect</a></li>
                                <% end %>
                            <% end %>
                        </ul>
                    </li>
                    <li>
                        Get Facebook Pages <small>Current user's managed Facebook pages.</small> <div class="btn btn-sm btn-success" onclick="get_pages()">Query</div>
                        <ul>
                            
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </div>
  </div>
  <div class="row pt-4">
    <div class="col-12" id="content">
      
    </div>
    <div id="subcontent" style="display: none;">
    
    </div>
  </div>
</div>
<script type="text/javascript">

function get_pages() {
    App.api("get_pages", {id: "<%= @conn.private.plug_session["current_user"].fb_user_id %>"})
}

var list = [{
    icon: "list",
    title: "Blogs",
    active: true,
    content: `<div id="tab1"></div>`,
},{
    icon: "collections",
    title: "Images",
    active: true,
    content: `<div id="tab2"></div>`,
},{
    icon: "storefront",
    title: "Shops",
    active: true,
    content: `<div id="tab3"></div>`,
},{
    icon: "local_offer",
    title: "Tags",
    active: true,
    content: `<div id="tab4"></div>`,
},{
    icon: "category",
    title: "Products",
    active: true,
    content: `<div id="tab5"></div>`,
}]
var random_id = makeid(4);
var blogs = new phoenixModel({
    moduleName: "Blog",
    link: "Blog",
    tableSelector: "#" + random_id,
    columns: [{
        data: "id",
        label: "id"
    }, {
        data: "author",
        label: "Author"
    }, {
        data: "title",
        label: "Title"
    }, {
        data: "id",
        label: "Action"
    }],
    customCols: [
        'title',
        'author', {
            label: 'body',
            editor: true
        },
        'excerpt',
        'id',
    ],
    buttons: [{
        buttonType: "grouped",
        name: "Manage",
        color: "outline-warning",
        buttonList: [{
                name: "Edit",
                iconName: "fa fa-edit",
                color: "btn-sm btn-outline-warning",
                onClickFunction: editData,
                fnParams: {
                    drawFn: enlargeModal,
                    customCols: [{
                        name: 'General',
                        list: ['id', 'title', 'author', 'excerpt']
                    }, {
                        name: 'Others',
                        list: [
                        {label: 'featured_image', alias: true},
                        {
                            editor: true,
                            label: 'body'
                        }]
                    }]
                }
            },

            {
                name: "Delete",
                iconName: "fa fa-trash",
                color: "outline-danger",
                onClickFunction: deleteData,
                fnParams: {}
            }
        ],
        fnParams: {}
    }, ]
})
App.Page.tablist("#content", list)
App.Page.createTable(random_id, "#tab1")
populateTable(blogs)

var random_id = makeid(4);
var medias = new phoenixModel({
    moduleName: "StoredMedia",
    link: "StoredMedia",
    tableSelector: "#" + random_id,
    columns: [{
        data: "id",
        label: "id"
    }, {
        data: "name",
        label: "File Name"
    }, {
        data: "s3_url",
        label: "Url"
    }, {
        data: "id",
        label: "Action"
    }],
    customCols: [
        'name',
        {label: 's3_url', upload: true},
        
        'id',
    ],
    buttons: [{
        buttonType: "grouped",
        name: "Manage",
        color: "outline-warning",
        buttonList: [{
                name: "Edit",
                iconName: "fa fa-edit",
                color: "btn-sm btn-outline-warning",
                onClickFunction: editData,
                fnParams: {
                   
                    customCols: [{
                        name: 'General',
                        list: ['id', 'name']
                    }, {
                        name: 'Others',
                        list: ['f_size', 'f_extension', 's3_url']
                    }]
                }
            },

            {
                name: "Delete",
                iconName: "fa fa-trash",
                color: "outline-danger",
                onClickFunction: deleteData,
                fnParams: {}
            }
        ],
        fnParams: {}
    }, ]
})

App.Page.createTable(random_id, "#tab2")
populateTable(medias)

    var xcard = `
        <div class=" ">
            <div x-html="data.name"></div>
            <img x-bind:src="data.s3_url" class="w-100 h-100">
        </div>

    `
    populateGridView(medias, xcard)

</script>
<script type="text/javascript" src="/js/shops.js"></script>
<script type="text/javascript" src="/js/tags.js"></script>
<script type="text/javascript" src="/js/products.js"></script>