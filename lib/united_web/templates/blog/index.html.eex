<div class="container">

  <div class="row pt-4">
    <div class="col-12" id="content">
    </div>
    <div id="subcontent" style="display: none;">
    </div>
  </div>
</div>
<script type="text/javascript">
var pages = [];

function get_pages() {
  pages = App.api("get_pages", { id: "<%= @conn.private.plug_session["current_user"].fb_user_id %>" });

  pages.forEach((v,i) => {

      $("#fb_pages").append(`<li>`+v.name+` <span class="badge bg-primary">`+v.page_id+`</span>
            <div class="btn btn-sm btn-primary" onclick="get_videos('`+v.page_access_token+`')">Check LiveVideos</div>
            <ul>
                <li>
            </ul>
        </li>`)
  })

}

function get_videos(pat) {
var res =
    App.api("get_videos", {pat: pat});

}

var list = [{
  icon: "list",
  title: "Blogs",
  active: true,
  content: `<div id="tab1"></div>`,
}, {
  icon: "collections",
  title: "Images",
  active: true,
  content: `<div id="tab2"></div>`,
}, {
  icon: "storefront",
  title: "Shops",
  active: true,
  content: `<div id="tab3"></div>`,
}, {
  icon: "local_offer",
  title: "Tags",
  active: true,
  content: `<div id="tab4"></div>`,
}, {
  icon: "category",
  title: "Products",
  active: true,
  content: `<div id="tab5"></div>`,
}]
var random_id = makeid(4);
var blogs = new phoenixModel({
  moduleName: "Blog",
  link: "Blog",
  tableSelector: "#" + random_id,
  columns: [{
    data: "id",
    label: "id"
  }, {
    data: "author",
    label: "Author"
  }, {
    data: "title",
    label: "Title"
  }, {
    data: "id",
    label: "Action"
  }],
  customCols: [
    'title',
    'author', {
      label: 'body',
      editor: true
    },
    'excerpt',
    'id',
  ],
  buttons: [{
    buttonType: "grouped",
    name: "Manage",
    color: "outline-warning",
    buttonList: [{
        name: "Edit",
        iconName: "fa fa-edit",
        color: "btn-sm btn-outline-warning",
        onClickFunction: editData,
        fnParams: {
          drawFn: enlargeModal,
          customCols: [{
            name: 'General',
            list: ['id', 'title', 'author', 'excerpt']
          }, {
            name: 'Others',
            list: [
              { label: 'featured_image', alias: true },
              {
                editor: true,
                label: 'body'
              }
            ]
          }]
        }
      },

      {
        name: "Delete",
        iconName: "fa fa-trash",
        color: "outline-danger",
        onClickFunction: deleteData,
        fnParams: {}
      }
    ],
    fnParams: {}
  }, ]
})
App.Page.tablist("#content", list)
App.Page.createTable(random_id, "#tab1")
populateTable(blogs)

var random_id = makeid(4);
var medias = new phoenixModel({
  moduleName: "StoredMedia",
  link: "StoredMedia",
  tableSelector: "#" + random_id,
  columns: [{
    data: "id",
    label: "id"
  }, {
    data: "name",
    label: "File Name"
  }, {
    data: "s3_url",
    label: "Url"
  }, {
    data: "id",
    label: "Action"
  }],
  customCols: [
    'name',
    { label: 's3_url', upload: true },

    'id',
  ],
  buttons: [{
    buttonType: "grouped",
    name: "Manage",
    color: "outline-warning",
    buttonList: [{
        name: "Edit",
        iconName: "fa fa-edit",
        color: "btn-sm btn-outline-warning",
        onClickFunction: editData,
        fnParams: {

          customCols: [{
            name: 'General',
            list: ['id', 'name']
          }, {
            name: 'Others',
            list: ['f_size', 'f_extension', 's3_url']
          }]
        }
      },

      {
        name: "Delete",
        iconName: "fa fa-trash",
        color: "outline-danger",
        onClickFunction: deleteData,
        fnParams: {}
      }
    ],
    fnParams: {}
  }, ]
})

App.Page.createTable(random_id, "#tab2")
populateTable(medias)

var xcard = `
        <div class=" ">
            <div x-html="data.name"></div>
            <img x-bind:src="data.s3_url" class="w-100 h-100">
        </div>

    `
populateGridView(medias, xcard)
</script>
<script type="text/javascript" src="/js/shops.js"></script>
<script type="text/javascript" src="/js/tags.js"></script>
<script type="text/javascript" src="/js/products.js"></script>